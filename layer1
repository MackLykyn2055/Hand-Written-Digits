
def cutting(arr):
    l = len(arr)//4
    ll = {0:0, 1:0, 2:0, 3:0, 4:0, 5:0, 6:0, 7:0, 8:0, 9:0}
    ll = toplayer(arr[:l], ll)
    ll = middletoplayer(arr[l:l+l], ll)
    ll = middledownlayer(arr[l+l:l+l+l], ll)
    ll = bottomlayer(arr[l+l+l:], ll)
    return ll


def toplayer(arr, ll):
    ls = arr[0].index(1)
    l = arr[0][::-1]
    le = l.index(1)
    ii = 0
    for i in arr[1:]:
        ns = i.index(1)
        l = i[::-1]
        ne = l.index(1)
        if ns < ls and ne < le:
            ll[0] += 10
            ll[2] += 10
            ll[3] += 10
            ll[5] += 10
            ll[6] += 10
            ll[8] += 10
            ll[9] += 10
        elif (ns == ls or 1 + ns == ls or 2 + ns == ls or 3 + ns == ls) and le + 15 < ne:
            ll[5] += 60
            ll[6] += 60
            ll[1] -= 100
            ll[2] -= 100
            ll[3] -= 100
            ll[4] -= 100
            ll[7] -= 100
            ll[8] -= 100
            ll[9] -= 100

        elif ns < ls and ne > le:
            ll[5] += 1
            ll[6] += 1
        elif ne == le and ns < ls:
            ll[1] += 10
            ll[7] += 10
        if ls + 30 < ns:
            ll[7] += 30
        ls = ns
        le = ne
    xx = len(arr)//8
    leng = len(arr[0])
    for i in arr[:xx]:
        ns = i.index(1)
        l = i[::-1]
        ne = i.index(1)
        if ns < leng // 5 and ne < leng// 5 and len(set(i[ns:-ne])) == 2:
            ll[4] += 20
    return ll


def middletoplayer(arr, ll):
    ls = arr[0].index(1)
    l = arr[0][::-1]
    le = l.index(1)
    diff = abs(ls - (len(arr[0])-le))
    for i in arr[1:]:
        ns = i.index(1)
        l = i[::-1]
        ne = l.index(1)
        if abs(ls - (len(arr[0]) - le)) == diff or abs(ls - (len(arr[0]) - le)) == diff+1 or abs(ls - (len(arr[0]) - le)) == diff-1:
            ll[2] += 3
            ll[1] += 3
            ll[7] += 3
        elif len(set(i[ns:-ne])) == 1 and len(i[ns:-ne]) > len(i)//2:
            ll[7] += 5
            ll[1] -= 8
            ll[6] -= 8
        elif ns >= ls and ne >= le:
            ll[8] += 3
            ll[9] += 3
        elif ns < len(i) // 3 and ne < len(i)//3:
            ll[0] += 15
        elif ls + 10 < ns:
            ll[5] += 70
            ll[4] += 70
        elif ns < ls and le < ne or ns == ls and le == ne or ns > ls and le > ne:
            ll[6] += 1
            ll[1] += 1
            ll[7] += 1
        if le >= ne and ls > ns and set(i[ns:-ne]) == 2:
            ll[4] -= 10
            ll[1] += 10
            ll[7] += 10
        if ns < ls and le < ne:
            ll[3] += 5
        elif ls < ns and ne < le:
            ll[3] += 5
        ls = ns
        le = ne
    return ll


def middledownlayer(arr, ll):
    ls = arr[0].index(1)
    l = arr[0][::-1]
    le = l.index(1)
    leng = len(arr[0])
    for i in arr[1:]:
        ns = i.index(1)
        l = i[::-1]
        ne = l.index(1)
        if ns < ls and ne < le:
            ll[6] += 1
            ll[8] += 1
        elif len(set(i[ns:-ne])) == 1 and len(i[ns:-ne]) > len(i)//2:
            ll[7] += 3
        elif ne + 10 < le:
            ll[7] += 1
            ll[1] -= 5
            ll[2] -= 5
        elif ne < len(i) // 2 and ns > len(i) //2:
            ll[9] += 1
        elif ne < len(i)//3 and ns < len(i)//3:
            ll[0] += 1
        elif ns < ls and le < ne:
            ll[6] += 1
        elif (le > ne and ls < ns) or (le < ne and ls > ne):
            ll[1] += 1
            ll[7] += 1
            ll[5] += 1
        if le >= ne and ls > ns and set(i[ns:-ne]) == 2:
            ll[4] -= 10
            ll[1] += 10
            ll[7] += 10
        if ne < leng//4:
            ll[7] += 4
            ll[4] += 4
        if 0 not in i[ns:-ne-1]:
            ll[0] -= 1
        if ns == ls and ne == le:
            ll[1] += 1
        if ns < ls and le < ne:
            ll[3] += 5
        elif ls < ns and ne < le:
            ll[3] += 5
        ls = ns
        le = ne
    return ll


def bottomlayer(arr, ll):
    ls = arr[0].index(1)
    l = arr[0][::-1]
    le = l.index(1)
    for i in arr[1:]:
        ns = i.index(1)
        l = i[::-1]
        ne = l.index(1)
        if ls < ns and le < ne:
            ll[0] += 5
            ll[3] += 5
            ll[5] += 5
            ll[6] += 5
            ll[8] += 5
            ll[9] += 5
        elif ne < le and ls < ns:
            ll[2] += 5
            ll[1] += 5
            ll[8] -= 5
        elif le < ne and ls > ns or le > ne and ls < ns:
            ll[1] += 1
            ll[9] += 1
            ll[4] += 1
        elif ne + 10 < le:
            ll[1] += 1
            ll[2] += 1
            ll[7] -= 5
        elif ne + 10 < le and ns + 10 < ls:
            ll[7] += 1
            ll[1] -=5
            ll[2] -= 5
        ls = ns
        le = ne
    return ll
